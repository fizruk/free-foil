// File generated by the BNF Converter (bnfc 2.9.6).

package org.syntax.lambdapi.simple;
/** Composition Visitor
*/

public class ComposVisitor<A> implements
  org.syntax.lambdapi.simple.Absyn.Program.Visitor<org.syntax.lambdapi.simple.Absyn.Program,A>,
  org.syntax.lambdapi.simple.Absyn.Command.Visitor<org.syntax.lambdapi.simple.Absyn.Command,A>,
  org.syntax.lambdapi.simple.Absyn.Term.Visitor<org.syntax.lambdapi.simple.Absyn.Term,A>
{
    /* Program */
    public org.syntax.lambdapi.simple.Absyn.Program visit(org.syntax.lambdapi.simple.Absyn.AProgram p, A arg)
    {
      org.syntax.lambdapi.simple.Absyn.ListCommand listcommand_ = new org.syntax.lambdapi.simple.Absyn.ListCommand();
      for (org.syntax.lambdapi.simple.Absyn.Command x : p.listcommand_)
      {
        listcommand_.add(x.accept(this,arg));
      }
      return new org.syntax.lambdapi.simple.Absyn.AProgram(listcommand_);
    }

    /* Command */
    public org.syntax.lambdapi.simple.Absyn.Command visit(org.syntax.lambdapi.simple.Absyn.CommandCheck p, A arg)
    {
      org.syntax.lambdapi.simple.Absyn.Term term_1 = p.term_1.accept(this, arg);
      org.syntax.lambdapi.simple.Absyn.Term term_2 = p.term_2.accept(this, arg);
      return new org.syntax.lambdapi.simple.Absyn.CommandCheck(term_1, term_2);
    }
    public org.syntax.lambdapi.simple.Absyn.Command visit(org.syntax.lambdapi.simple.Absyn.CommandCompute p, A arg)
    {
      org.syntax.lambdapi.simple.Absyn.Term term_1 = p.term_1.accept(this, arg);
      org.syntax.lambdapi.simple.Absyn.Term term_2 = p.term_2.accept(this, arg);
      return new org.syntax.lambdapi.simple.Absyn.CommandCompute(term_1, term_2);
    }

    /* Term */
    public org.syntax.lambdapi.simple.Absyn.Term visit(org.syntax.lambdapi.simple.Absyn.Lam p, A arg)
    {
      String ident_ = p.ident_;
      org.syntax.lambdapi.simple.Absyn.Term term_ = p.term_.accept(this, arg);
      return new org.syntax.lambdapi.simple.Absyn.Lam(ident_, term_);
    }
    public org.syntax.lambdapi.simple.Absyn.Term visit(org.syntax.lambdapi.simple.Absyn.Pi p, A arg)
    {
      String ident_ = p.ident_;
      org.syntax.lambdapi.simple.Absyn.Term term_1 = p.term_1.accept(this, arg);
      org.syntax.lambdapi.simple.Absyn.Term term_2 = p.term_2.accept(this, arg);
      return new org.syntax.lambdapi.simple.Absyn.Pi(ident_, term_1, term_2);
    }
    public org.syntax.lambdapi.simple.Absyn.Term visit(org.syntax.lambdapi.simple.Absyn.App p, A arg)
    {
      org.syntax.lambdapi.simple.Absyn.Term term_1 = p.term_1.accept(this, arg);
      org.syntax.lambdapi.simple.Absyn.Term term_2 = p.term_2.accept(this, arg);
      return new org.syntax.lambdapi.simple.Absyn.App(term_1, term_2);
    }
    public org.syntax.lambdapi.simple.Absyn.Term visit(org.syntax.lambdapi.simple.Absyn.Var p, A arg)
    {
      String ident_ = p.ident_;
      return new org.syntax.lambdapi.simple.Absyn.Var(ident_);
    }
}
